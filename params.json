{
  "name": "hubsh",
  "tagline": "a command line GitHub API client in sh",
  "body": "Features\r\n--------\r\n\r\n- clone `[USER/]REPO`\r\n- create\r\n- fork and pull-request\r\n\r\nInstall\r\n--------\r\n\r\n### Dependencies\r\n\r\n- curl\r\n- git\r\n- sh\r\n\r\n### With `make`\r\n\r\n```sh\r\n; git clone https://github.com/weakish/hubsh\r\n; cd hubsh\r\n; make\r\n```\r\n\r\nFiles will be installed to `/usr/local/bin`.\r\nIf you want to install other place, edit `config.mk` before running `make`.\r\n\r\nMakefile is compatible with both GNU make and BSD make.\r\n\r\n### With basher\r\n\r\n```sh\r\n; basher install weakish/gister\r\n```\r\n\r\n### Manually\r\n\r\nCopy `bin/hubsh` to `$PATH`.\r\n\r\nUsage\r\n------\r\n\r\n```\r\n; hubsh --help\r\nhubsh -- GitHub API client in sh\r\n\r\nhubsh [ACTION]\r\n\r\nActions:\r\nauth         check if github acess token is available\r\nclone        supports clonning from `github_user/repo` and `repo` (your own repo)\r\ncreate       create this repository on GitHub and add GitHub as origin\r\nfork         make a fork of a remote repository on GitHub and add as remote\r\ngit-to-https convert github original from `git://` to `https://`\r\npull-request send a pull request at GitHub\r\nwhoami       show github username\r\nversion      show version\r\nhelp         this help page\r\n\r\nOptions for sub commands:\r\nclone        [USER/]REPO\r\ncreate       [-n NAME] [-d DESCRIPTION] [-u HOMEPAGE] [-p] [-I] [-W] [-D]\r\n             (p: private, I: disable issue, W: disable wiki, D: disable download)\r\ngit-to-https [-u BRANCH] (also change BRANCH tracking, BRANCH defaults to `master`)\r\npull-request [-b BASE_BRANCH] [-h HEAD_BRANCH] [[-m MESSAGE_FILE] | [-i ISSUE]]\r\n             (If `-m` is supplied, the first line of the file will become the subject,\r\n             the third line to end of file will become the description. If `-m` is not\r\n             supplied, message will use the most recent (single) commit message.)\r\n\r\n\r\nFiles:\r\nAuth token is stored in `$HOME/.config/hubsh`.\r\n```\r\n\r\nThe `Auth token` is a GitHub personal access token.\r\nYou need to get it from GitHub > Settings.\r\n`hubsh auth` will print out a short instruction for getting the token.\r\n\r\nYou can add alias in `.gitconfig`, e.g. point `git pr` to `hubsh pull-request`.\r\n\r\nhubsh v.s. hub\r\n--------------\r\n\r\nhub is in Go, so it is supported on any platform supporting Go.\r\nhubsh is in sh, so it is supported on any platform supporting curl and sh.\r\n\r\nhubsh only implemented a small subset of hub features.\r\nBut there is one new feature `git-to-https`:\r\nIf some repository is cloned via `git://`, `git-to-https` will convert it to `https`.\r\n(Useful for insecure network.)\r\n\r\n`hubsh pull-request` is different to `hub pull-request`:\r\n\r\n- A diffstat is appended to pull request message.\r\n- hubsh will never bring you to an editor,\r\n  it either use a file given by `-m`, or just the most recent (single) commit.\r\n- hubsh's `-m` is equivalent to hub's `-F`, and hubsh has no option for `-m MESSAGE` in hub.\r\n- hubsh does not support `-o` and `-f` in hub.\r\n\r\n`hubsh create` is also different:\r\n\r\n- Instead of `hub create [NAME]`, use `hubsh [-n NAME]`.\r\n- hubsh has `-I`, `-W`, `-D` to disable issue, wiki, and downloads.\r\n- If `-d` is not given, `hubsh` will use first line of README.\r\n- hubsh does not support create repo under organization yet (pull request welcome).\r\n\r\nLicense\r\n--------\r\n\r\n0BSD\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}